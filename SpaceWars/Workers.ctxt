#BlueJ class context
comment0.target=Workers
comment0.text=\r\n\ Workers\ -\ a\ subclass\ of\ Units\ that\ creates\ a\ workers\ that\ can\ go\ to\ a\ factory\ and\ help\ \r\n\ create\ different\ vehicles\ or\ build\ a\ new\ factory\ when\ needed.\r\n\ \r\n\ @author\ Aristos\ Theocharoulas\ \r\n\ @version\ November\ 2019\r\n
comment1.params=red\ buildFactory
comment1.target=Workers(boolean,\ boolean)
comment1.text=\r\n\ Constructor\ -\ creates\ a\ worker\ and\ manages\ the\ animations\ for\ each\ team\r\n\ \r\n\ @param\ \ \ red\ \ \ \ \ \ \ \ \ \ \ \ \ specifies\ the\ team\ (true\ for\ red,\ false\ for\ blue)\r\n\ @param\ \ \ buildFactory\ \ \ \ true\ when\ worker\ has\ to\ build\ a\ factory,\ false\ when\ he\ just\ goes\ to\ a\ factory\r\n
comment10.params=
comment10.target=int[][]\ getAvailableCoords()
comment10.text=\r\n\ getAvailableCoords\ -\ gets\ the\ available\ coordinates\ from\ the\ factories\ and\ adds\ them\ to\ an\ array.\r\n\ \r\n\ @return\ \ int[][]\ \ \ \ \ returns\ the\ available\ coordinates\ as\ an\ array\r\n
comment11.params=x\ y
comment11.target=boolean\ factoryExistsAt(int,\ int)
comment11.text=\r\n\ factoryExistsAt\ -\ checks\ to\ see\ if\ factory\ exists\ at\ a\ certain\ location\r\n\ \r\n\ @param\ \ \ x\ \ \ \ \ \ \ \ \ \ \ x\ coordinate\ on\ the\ world\r\n\ @param\ \ \ y\ \ \ \ \ \ \ \ \ \ \ y\ coordinate\ on\ the\ world\r\n\ \r\n\ @return\ \ boolean\ \ \ \ \ returns\ true\ if\ factory\ exists\ at\ x,y,\ false\ if\ not\r\n
comment12.params=
comment12.target=void\ moveTowardTarget()
comment12.text=\r\n\ moveTowardTarget\ -\ moves\ toward\ targetFactoryCoords\ at\ the\ set\ speed\r\n\ \r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Act\ -\ do\ whatever\ the\ NewWorker\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment3.params=
comment3.target=void\ animateWorkerMovement()
comment3.text=\r\n\ animateWorkerMovement\ -\ animation\ used\ when\ the\ worker\ is\ walking\r\n
comment4.params=
comment4.target=void\ animateBuildingMovement()
comment4.text=\r\n\ animateBuildingMovement\ -\ animation\ used\ when\ the\ worker\ is\ building\ a\ factory\r\n
comment5.params=
comment5.target=void\ die()
comment5.text=\r\n\ die\ -\ removes\ the\ worker\ from\ the\ world\r\n
comment6.params=
comment6.target=void\ goToFactory()
comment6.text=\r\n\ goToFactory\ -\ goes\ to\ the\ targeted\ factory\ (at\ targetFactoryCoords)\r\n
comment7.params=
comment7.target=void\ build()
comment7.text=\r\n\ build\ -\ worker\ goes\ to\ a\ random\ empty\ location\ and\ takes\ 20\ seconds\ to\ build\ a\ factory\r\n
comment8.params=a1\ a2
comment8.target=double\ getDistance(greenfoot.Actor,\ greenfoot.Actor)
comment8.text=\r\n\ getDistance\ -\ Gets\ the\ Distance\ between\ two\ actors.\r\n\ \r\n\ @param\ \ \ a1\ \ \ \ \ \ get\ the\ location\ of\ actor\ a1\r\n\ @param\ \ \ a2\ \ \ \ \ \ get\ the\ distance\ from\ the\ location\ of\ actor\ a1\ to\ actor\ a2\r\n\ @return\ \ double\ \ the\ distance\ from\ a1\ to\ a2\r\n
comment9.params=
comment9.target=void\ targetRandomFactory()
comment9.text=\r\n\ targetRandomFactory\ -\ targets\ a\ random\ factory\ from\ either\ the\ ones\ that\ exist\ in\ the\ world\ or\ the\ ones\ that\ need\ to\ be\ built\r\n
numComments=13
